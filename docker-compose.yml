version: '3.7'

services:
    webserver:
        container_name: webserver
        image: nginx:latest
        ports:
            - "80:80"
            - "8000:8000"
        volumes:
            - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
            - ./:/var/www/html
        build:
            context: .
            target: nginx-stage
        depends_on:
            - php
            - node
        networks:
            - app-network

    php:
        container_name: php
        image: php:8.1-fpm
        restart: unless-stopped
        tty: true
        working_dir: /var/www/html
        build:
            context: .
            target: php-stage
        depends_on:
            - mysql
            - redis
        volumes:
            - ./:/var/www/html
        networks:
            - app-network

    node:
        container_name: node
        image: node:22.2.0
        build:
            context: .
            target: node-stage
        entrypoint:
            - /var/www/html/entrypoint_node.sh
        volumes:
            - ./:/var/www/html
        expose:
            - "80"
        networks:
            - app-network
        environment:
            - NODE_ENV=development

    mysql:
        container_name: mysql
        image: mysql:8.0
        ports:
            - "3306:3306"
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_DATABASE=laravel
            - MYSQL_USER=user
            - MYSQL_PASSWORD=password
        volumes:
            - mysql-data:/var/lib/mysql
        networks:
            - app-network

    phpmyadmin:
        container_name: phpmyadmin
        image: phpmyadmin:latest
        ports:
            - 9015:80
        environment:
            - PMA_ARBITRARY=1
        networks:
            - app-network

    redis:
        container_name: redis
        image: redis:latest
        command: ["redis-server", "/etc/redis/redis.conf"]
        ports:
            - "6379:6379"
        volumes:
          - ./docker/redis/.conf/redis.conf:/etc/redis/redis.conf
          - ./docker/redis/data:/var/lib/redis/
        networks:
            - app-network

volumes:
    mysql-data:

networks:
    app-network:
