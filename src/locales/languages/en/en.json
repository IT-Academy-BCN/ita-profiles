{
  "project": {
    "title": "Welcome to the ita-profiles-frontend project",
    "description": "Frontend part of the ita-profiles project"
  },
  "exceptions": {
    "CouldNotCreateJWTokenPassport": "It was not possible to generate the JWT using Passport for the user with ID %id",
    "InvalidCredentials": "Invalid credentials provided by the user.",
    "LanguageAlreadyExists": "Language %language already exists in student profile %student",
    "LanguageNotFound": "This language is not in the list of available languages",
    "ProjectNotFound": "No project found with this ID: %projectId",
    "ResumeNotFound": "No resume found for student id: %studentId",
    "StudentLanguageResumeNotFound": "Language with id: %languageId not found for student with id: %studentId",
    "StudentNotFound": "No student was found with this ID: %studentId",
    "TagNotFound": "No tags found with this ID: %tagId",
    "UserNotAuthenticated": "Not authorized",
    "UserNotFound": "No user was found with this ID: %userDNI",
    "UserNotFoundInRedis": "It was not possible to find the JWT in Redis for the user with ID %s",
    "UserNotStoredInRedis": "Failed to store JWT in Redis for user with ID %s"
  },
  "http": {
    "controllers": {
      "api": {
        "student": {
          "AddStudentImage": "The image has been updated successfully",
          "AddStudentLanguage": "The Language has been added successfully",
          "UpdateStudentImage": "The image has been updated successfully",
          "UpdateStudentLanguages": "The Language has been added successfully",
          "UpdateStudentProfile": "The student's profile has been updated successfully",
          "UpdateStudentProject": "The project has been updated successfully"
        },
        "tag": {
          "AddStudentImage": "The label has been successfully updated.",
          "AddStudentLanguage": "The language has been added successfully",
          "UpdateStudentImage": "The image has been updated successfully",
          "UpdateStudentLanguages": "The language updated successfully",
          "UpdateStudentProfile": "Student's profile has been updated successfully",
          "UpdateStudentProject": "The Project has been updated successfully"
        }
      }
    },
    "request": {
      "RegisterRequest": {
        "username_required": "The username is required",
        "username_string": "The username must be a text",
        "username_min": "The username must have at least 3 characters",
        "dni_required": "DNI is required",
        "dni_unique": "DNI already exists",
        "dni_string": "DNI must be a text",
        "dni_max": "DNI must not exceed :max characters",
        "dni_regex": "DNI must not contain special characters",
        "email_email": "It must have an email format",
        "email_required": "Email is required",
        "email_string": "The email must be a text",
        "email_max": "The email must not exceed :max characters",
        "email_unique": "The email already exists",
        "password_required": "The password is required",
        "password_confirmed": "The password confirmation does not match",
        "password_regex": "The password must contain at least one capital letter and one special character, and have a minimum length of 8 characters",
        "specialization_required": "The specialty is required",
        "specialization_in": "The specialty is not validated",
        "terms_required": "You must accept the terms and conditions",
        "terms_in": "You must accept the terms and conditions"
      }
    },
    "StoreCompanyRequest": {
      "name_required": "The company name is required.",
      "email_required": "The email address is required.",
      "email_email": "Please enter a valid email address.",
      "email_unique": "This email address is already in use.",
      "CIF_required": "The CIF is required.",
      "CIF_unique": "This CIF is already in use.",
      "CIF_regex": "The CIF format is invalid.",
      "location_required": "The location is required.",
      "website_url": "The website must contain a valid URL."
    }
  },
    "rules": {
      "AcceptedTermsRule": "You must accept the terms and conditions.",
      "DniNieRule": ":attribute is not valid.",
      "UniqueTagsIdsRule": {
        "duplicate_values": "The field :attribute contains duplicate values.",
        "nonexistent_values": "One or more values in the field :attribute do not exist in the tags table."
      }
    },
    "services": {
      "student": {
        "StudentListService": "No resumes available.",
        "UpdateStudentProjectServices": "You do not have permission to update this project."
      }
    }
  }