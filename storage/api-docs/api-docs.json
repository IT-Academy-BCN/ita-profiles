{
    "openapi": "3.0.0",
    "info": {
        "title": "ITA Profiles page API documentation",
        "description": "\n\n    API Rest documentation used on ITA Profiles WEB. Some useful links below:\n *   [ITA Profles Backend Repository](https://github.com/IT-Academy-BCN/ita-profiles-backend)\n *   [ITA Profiles Frontend Repository](https://github.com/IT-Academy-BCN/ita-profiles-frontend)\n *   [ITA Profiles WEB](https://ornate-dieffenbachia-e0ff84.netlify.app)",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/v1"
        }
    ],
    "paths": {
        "/student/{studentId}/resume/additionaltraining": {
            "get": {
                "tags": [
                    "Student -> Resume"
                ],
                "summary": "Retrieve a list of additional training",
                "operationId": "getStudentResumeAdditionalTraining",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "Student ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful. Additional training list retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "uuid": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "course_name": {
                                                "type": "string"
                                            },
                                            "study_center": {
                                                "type": "string"
                                            },
                                            "course_beginning_year": {
                                                "type": "integer"
                                            },
                                            "course_ending_year": {
                                                "type": "integer"
                                            },
                                            "duration_hrs": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student/{studentId}/resume/modality/": {
            "get": {
                "tags": [
                    "Student -> Resume"
                ],
                "summary": "Get the modality of a specific resume",
                "description": "Returns the modality of a specific student's resume  ",
                "operationId": "getStudentResumeModality",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "Student ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "modality": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "Presencial",
                                                "Remot"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Modality not found or Student not found or Resume not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'estudiant amb ID: {studentId} no té informada la modalitat al seu currículum"
                                        },
                                        "message2": {
                                            "type": "string",
                                            "example": "No s'ha trobat cap estudiant amb aquest ID {studentId}"
                                        },
                                        "message3": {
                                            "type": "string",
                                            "example": "No s'ha trobat cap currículum per a l'estudiant amb id: {studentId}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Hi ha hagut un error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/specialization/list": {
            "get": {
                "tags": [
                    "Student -> Resume"
                ],
                "summary": "Retrieve a specialization list from resume model enum",
                "operationId": "48a099805fc747c3b2f8cd5f55038a47",
                "responses": {
                    "200": {
                        "description": "Successful. Specialization list retrieved from enum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student/{studentId}/resume/bootcamp": {
            "get": {
                "tags": [
                    "Student -> Resume"
                ],
                "summary": "Get a list of student´s bootcamp/s",
                "description": "\n- Returns detailed list of a student's bootcamp/s and the date that was/were finished.\n- Returns an empty array if the student didn't finish any bootcamp yet.",
                "operationId": "getStudentResumeBootcamp",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "Student ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "bootcamps": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "bootcamp_id": {
                                                        "description": "Bootcamp ID",
                                                        "type": "string",
                                                        "example": "9bd21470-db24-4ce3-b838-c4d3847785d1"
                                                    },
                                                    "bootcamp_name": {
                                                        "description": "Bootcamp Name",
                                                        "type": "string",
                                                        "example": "Fullstack PHP"
                                                    },
                                                    "bootcamp_end_date": {
                                                        "description": "Bootcamp end date",
                                                        "type": "string",
                                                        "example": "2023-11-05"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student or resume not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No s'ha trobat cap estudiant amb aquest ID {studentId}"
                                        },
                                        "message2": {
                                            "type": "string",
                                            "example": "L'estudiant amb ID: {studentId} no té cap projecte informat al seu currículum"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student/{studentId}/resume/collaborations": {
            "get": {
                "tags": [
                    "Student -> Resume"
                ],
                "summary": "Retrieve a list of collaborations",
                "description": "Retrieve collaborations details of a specific student. No authentication required.",
                "operationId": "getStudentResumeCollaborations",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "Student ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful. Collaboration list retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "collaborations": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "description": "Collaboration UUID",
                                                        "type": "string",
                                                        "example": "e6b4432b-d2f8-4e06-b727-6ecaf40e6e0e"
                                                    },
                                                    "collaboration_name": {
                                                        "description": "Name of the collaboration",
                                                        "type": "string",
                                                        "example": "Project X"
                                                    },
                                                    "collaboration_description": {
                                                        "description": "Description of the collaboration",
                                                        "type": "string",
                                                        "example": "A collaborative project on topic Y"
                                                    },
                                                    "collaboration_quantity": {
                                                        "description": "Quantity of the collaboration",
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Collaborations not found or Student not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Collaborations not found for the student with ID: {studentId}"
                                        },
                                        "message2": {
                                            "type": "string",
                                            "example": "No student found with ID: {studentId}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "There was a server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student/{studentId}/resume/detail": {
            "get": {
                "tags": [
                    "Student -> Resume"
                ],
                "summary": "Get Student Detail.",
                "description": "Retrieve details of a specific student. No authentication required.",
                "operationId": "getStudentDetailsResumeAbout",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "Student ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success. Returns the student details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "fullname": {
                                                        "type": "string",
                                                        "example": "Katrine Wyman Jacobson"
                                                    },
                                                    "subtitle": {
                                                        "type": "string",
                                                        "example": "Full Stack developer en PHP"
                                                    },
                                                    "social_media": {
                                                        "properties": {
                                                            "github": {
                                                                "properties": {
                                                                    "url": {
                                                                        "type": "string",
                                                                        "example": "https://github.com/bettie52"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "linkedin": {
                                                                "properties": {
                                                                    "url": {
                                                                        "type": "string",
                                                                        "example": "https://linkedin.com/abernathy.dayne"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "about": {
                                                        "type": "string",
                                                        "example": "Iusto aut debitis soluta facere tempore quisquam. Vel assumenda aliquid quod et eum quos ex. Ipsa ea tempora minima occaecati. Culpa occaecati quod laboriosam reiciendis quia consequuntur."
                                                    },
                                                    "tags": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 4
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "HTML&CSS"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No hem trobat cap estudiant amb aquest ID"
                    },
                    "500": {
                        "description": "Error inesperat"
                    }
                }
            }
        },
        "/student/{studentId}/resume/languages": {
            "get": {
                "tags": [
                    "Student -> Resume"
                ],
                "summary": "Gets the languages spoken by a student",
                "description": "This endpoint receives the UUID of a student and returns a detailed list of the languages ​​spoken by said student.\n\nIt returns a list of languages along with any other relevant information, such as the proficiency level in each language.",
                "operationId": "getStudentResumeLanguages",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "Student ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Languages of the student found successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "languages": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "language_id": {
                                                        "description": "Language UUID",
                                                        "type": "string",
                                                        "example": "e6b4432b-d2f8-4e06-b727-6ecaf40e6e0e"
                                                    },
                                                    "language_name": {
                                                        "description": "Language name",
                                                        "type": "string",
                                                        "example": "Anglès"
                                                    },
                                                    "language_level": {
                                                        "description": "The student's proficiency level in the language",
                                                        "type": "string",
                                                        "example": "Bàsic"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Language not found or Student not found or Resume not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'estudiant amb ID: {studentId} no té informat cap idioma al seu currículum"
                                        },
                                        "message2": {
                                            "type": "string",
                                            "example": "No s'ha trobat cap estudiant amb aquest ID {studentId}"
                                        },
                                        "message3": {
                                            "type": "string",
                                            "example": "No s'ha trobat cap currículum per a l'estudiant amb id: {studentId}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Hi ha hagut un error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student/resume/list": {
            "get": {
                "tags": [
                    "Student -> Resume"
                ],
                "summary": "Get Students List.",
                "description": "Get a list of all students registered with the Profile-Home fields in Figma Design.\n\n- If a 'specialization' parameter is provided, the list will be filtered by student's specialization.\n\n- If not, it returns a list of all students.\n\n- Multiple parameters can be added separated by commas without spaces.\n\n- For example, if the objetive is to filter Backend and Frontend students, the query would be:\n\n    ```/student/resume/list?specialization=frontend,backend```\n    - To filter by tags, the query would be:\n    ```/student/resume/list?tags=PHP,Laravel```\n    - To filter by both specialization and tags:\n    ```/student/resume/list?specialization=frontend&tags=php,react```\n\n---\n\n    No authentication required",
                "operationId": "getStudentResumeListHome",
                "parameters": [
                    {
                        "name": "specialization",
                        "in": "query",
                        "description": "The specializations to filter students by",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "The tags to filter students by",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of students",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "example": "9bc3c8fd-7754-43e0-95a1-68fc011d106c"
                                            },
                                            "fullname": {
                                                "type": "string",
                                                "example": "Juan Pérez"
                                            },
                                            "subtitle": {
                                                "type": "string",
                                                "example": "Desarrollador Frontend"
                                            },
                                            "photo": {
                                                "description": "Student Image Path",
                                                "type": "string",
                                                "example": "https://itaperfils.eurecatacademy.org/img/stud_1.png"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "C#"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "example": {
                                                        "id": 15,
                                                        "name": "C#"
                                                    }
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student/{studentId}/resume/projects": {
            "get": {
                "tags": [
                    "Student -> Resume"
                ],
                "summary": "Get a detailed list of projects for a student",
                "description": "Returns a list of projects for a specific student.",
                "operationId": "getStudentResumeProjects",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "description": "Student ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "projects": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uuid": {
                                                        "description": "Unique identifier for the project",
                                                        "type": "string",
                                                        "format": "uuid",
                                                        "example": "9becbb14-0267-409b-9c77-9377ce67c9cf"
                                                    },
                                                    "project_name": {
                                                        "description": "Name of the project",
                                                        "type": "string",
                                                        "example": "ITA Profiles"
                                                    },
                                                    "company_name": {
                                                        "description": "Name of the company associated with the project",
                                                        "type": "string",
                                                        "example": "Barcelona Activa"
                                                    },
                                                    "project_url": {
                                                        "description": "URL of the project",
                                                        "type": "string",
                                                        "example": "https://www.ita-profiles.com"
                                                    },
                                                    "tags": {
                                                        "description": "List of tags associated with the project, each tag includes an id and a name",
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 7
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Bootstrap"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "project_repository": {
                                                        "description": "URL of the project repository",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student,Projects or Resume not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No s'ha trobat cap estudiant amb aquest ID {studentId}"
                                        },
                                        "message2": {
                                            "type": "string",
                                            "example": "L'estudiant amb ID: {studentId} no té cap projecte informat al seu currículum"
                                        },
                                        "message3": {
                                            "type": "string",
                                            "example": "No s'ha trobat cap currículum per a l'estudiant amb id: {studentId}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hi ha hagut un error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/development/list": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Retrieve a development list ",
                "operationId": "c2b401adb6631f377c6e1cfbe4495159",
                "responses": {
                    "200": {
                        "description": "Successful. Development list retrieved from json file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Tags Index.",
                "description": "Retrieve a list of registered tags. Admin Authentication is required.",
                "operationId": "getAllTags",
                "responses": {
                    "200": {
                        "description": "Successful. Tag Index retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "tag_name": {
                                                "type": "string",
                                                "example": "Laravel"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-01-25T12:34:56Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-01-25T12:34:56Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No tags found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No tags found in the database."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "Create a new tag",
                "description": "Creates a new tag.",
                "operationId": "createTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tag_name": {
                                        "type": "string",
                                        "example": "Laravel"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tag created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tag created successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating the tag.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating the tag. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get details of a specific tag",
                "description": "Retrieve details of a specific tag based on the provided ID.",
                "operationId": "getTagById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tag ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "tag_name": {
                                                    "type": "string",
                                                    "example": "Laravel"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-25T12:34:56Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-25T12:34:56Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tag not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tag not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tags"
                ],
                "summary": "Update details of a specific tag.",
                "description": "Updates details of a specific tag based on the provided ID.",
                "operationId": "updateTag",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tag to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tag_name": {
                                        "type": "string",
                                        "example": "Updated Tag"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tag details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "tag_name": {
                                                "type": "string",
                                                "example": "Laravel"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-01-25T12:34:56Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-01-25T12:34:56Z"
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "Tag updated successfully."
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tag not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tag not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AdditionalTraining": {
                "title": "Additional Training",
                "description": "Additional Training Model",
                "properties": {
                    "id": {
                        "description": "Additional Training ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "course_name": {
                        "description": "Course Name",
                        "type": "string"
                    },
                    "study_center": {
                        "description": "Study Center",
                        "type": "string"
                    },
                    "course_beginning_year": {
                        "description": "Course Beginning Year",
                        "type": "integer",
                        "format": "int32"
                    },
                    "course_ending_year": {
                        "description": "Course Ending Year",
                        "type": "integer",
                        "format": "int32"
                    },
                    "duration_hrs": {
                        "description": "Duration in Hours",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "Training creation date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Training update date",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "AdditionalTraining"
                }
            },
            "AnnotationsAdmin": {
                "title": "Admin",
                "description": "Admin Model",
                "properties": {
                    "id": {
                        "description": "Admin ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the associated User",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "description": "Creation date of the Admin record",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update date of the Admin record",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Admin"
                }
            },
            "Collaboration": {
                "title": "Collaboration",
                "description": "Collaboration Model",
                "properties": {
                    "id": {
                        "description": "Collaboration ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    "collaboration_name": {
                        "description": "Collaboration Name",
                        "type": "string"
                    },
                    "collaboration_description": {
                        "description": "Collaboration description",
                        "type": "string"
                    },
                    "collaboration_quantity": {
                        "description": "Collaboration quantity",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "Training creation date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Training update date",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Collaboration"
                }
            },
            "AnnotationsRecruiter": {
                "title": "Recruiter",
                "description": "Recruiter Model",
                "properties": {
                    "id": {
                        "description": "Recruiter ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company": {
                        "description": "Recruiter Company",
                        "type": "string",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the associated User",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "description": "Creation date of the Recruiter record",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update date of the Recruiter record",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Recruiter"
                }
            },
            "AnnotationsStudent": {
                "title": "Student",
                "description": "Student Model",
                "properties": {
                    "id": {
                        "description": "Student ID",
                        "type": "string"
                    },
                    "user_id": {
                        "description": "ID of the associated User",
                        "type": "integer",
                        "format": "int64"
                    },
                    "subtitle": {
                        "description": "Presentation subtitle of the Student",
                        "type": "string"
                    },
                    "about": {
                        "description": "Presentation text of the Student",
                        "type": "string"
                    },
                    "cv": {
                        "description": "Curriculum of the Student-file?",
                        "type": "string"
                    },
                    "bootcamp": {
                        "description": "Name of the Bootcamp attended by the Student",
                        "type": "enum"
                    },
                    "end_date": {
                        "description": "Student Bootcamp's ending date",
                        "type": "string",
                        "format": "date"
                    },
                    "linkedin": {
                        "description": "Url of student's linkedin",
                        "type": "string"
                    },
                    "github": {
                        "description": "Url of student's github",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Creation date of the Student record",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update date of the Student record",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Student"
                }
            },
            "Tag": {
                "title": "Tag",
                "description": "Tag Model",
                "properties": {
                    "id": {
                        "description": "Tag ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "tag_name": {
                        "description": "Tag Name",
                        "type": "string",
                        "format": "int64"
                    },
                    "created_at": {
                        "description": "Tag creation date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Tag update date",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Tag"
                }
            },
            "AnnotationsUser": {
                "title": "User",
                "description": "User Model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "User's first name",
                        "type": "string",
                        "example": "John"
                    },
                    "surname": {
                        "description": "User's last name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "dni": {
                        "description": "User's DNI",
                        "type": "string",
                        "example": "12345678B"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    },
                    "password": {
                        "description": "User's password",
                        "type": "string",
                        "format": "password",
                        "example": "********"
                    },
                    "created_at": {
                        "description": "User's creation date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "User's update date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "email_verified_at": {
                        "description": "User's email verification date",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "responses": {
            "500": {
                "description": "Server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Hi ha hagut un error"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    }
}